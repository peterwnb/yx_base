<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.yx.mapper.FriendMapper">

	<resultMap type="com.geek.yx.model.Friend" id="baseMap">
		<result column="id_" property="id"/>
		<result column="user_id" property="userId"/>
		<result column="friend_id" property="friendId"/>
		<result column="status_" property="status"/>
	</resultMap>
	
	<update id="updateInviteStatus" parameterType="com.geek.yx.model.Friend">
		update 
			user_friend 
		set status_ = 1  wher (uf.user_id = #{userId} and uf.friend_id = #{friendId})  or (uf.user_id = #{friendId} and uf.friend_id = #{userId}) 
	</update>
	
	<select id="queryInviteInfo" parameterType="com.geek.yx.model.Friend" resultMap="baseMap">
		select 
			id_ , 
			user_id , 
			friend_id , 
			status_ 
		from user_friend uf
		wher (uf.user_id = #{userId} and uf.friend_id = #{friendId})
		  or (uf.user_id = #{friendId} and uf.friend_id = #{userId}) 
	</select>
	
	<select id="queryNew" parameterType="java.util.Map" resultType="java.util.Map">
		select * from
		(	select 
				u.id_ as userId,
				u.gender as gender,
				u.nick_name as nickName,
				u.phone,
				u.avatar as avatar,
				1 as fType
			 from aas_user u where not EXISTS
			(
				 select uid from
				 (
						select uf.friend_id as uid from user_friend uf where uf.user_id = '1123' 
							 union 
						select uf.user_id as uid from user_friend uf where uf.friend_id = '1123'
				 ) tmp where tmp.uid = u.id_  
			) order by u.create_time desc 
		) tmp
		
		UNION
		
		select * from
		(
			select 
				u.id_ as userId,
				u.gender as gender,
				u.nick_name as nickName,
				u.phone,
				u.avatar as avatar,
				2 as fType
			from user_friend uf  
			left join aas_user u on uf.user_id = u.id_
			where uf.status_ = 0 and uf.friend_id = #{userId}
			order by uf.create_time desc
		) tmp
		
		UNION
		
		select * from
		(
			select 
				u.id_ as userId,
				u.gender as gender,
				u.nick_name as nickName,
				u.phone,
				u.avatar as avatar,
				3 as fType
			from user_friend uf
			left join aas_user u  on uf.friend_id = u.id_
			where uf.user_id = #{userId}
			and uf.status_ = 0
			order by uf.create_time desc
		)tmp
	</select>
	
</mapper>
