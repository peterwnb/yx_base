package com.geek.yx.web;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.geek.yx.common.core.base.AbstractController;
import com.geek.yx.common.core.base.Parameter;
import com.geek.yx.common.core.support.Assert;
import com.geek.yx.common.core.vo.BaseResponse;
import com.geek.yx.common.core.vo.ResultCodeEnum;
import com.geek.yx.model.User;
import com.geek.yx.provider.IUserProvider;

import io.swagger.annotations.Api;

@RestController
@Api(value = "好友操作接口", description = "好友接口")
@RequestMapping(value = "/friend")
public class FriendController extends AbstractController<IUserProvider>{

	@Override
	public String getService() {
		return "friendService";
	}
	
	/**
	 * 邀请好友
	 * @param invitorId ：邀请者用户ID
	 * @param invitedId
	 * @return
	 */
	@GetMapping("/{invitorId}/invite/{invitedId}")
	public Object queryUserByPhone(@PathVariable("phone")String invitorId, @PathVariable("phone")String invitedId){
		Assert.isNotBlank(phone, "PHONE");
		User user = new User();
		user.setPhone(phone);
		Parameter parameter = new Parameter(getService(), "queryByPhone").setModel(user);
		Parameter resultP = provider.execute(parameter);
		if(resultP == null || null == resultP.getModel()){
			return new BaseResponse(ResultCodeEnum.USER_NOT_FOUND);
		}
		User result  = (User)resultP.getModel();
		return new BaseResponse(result);
	}

}
